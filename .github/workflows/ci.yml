name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 1. Web Manager 빌드
  build-web-manager:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build web-manager
        uses: docker/build-push-action@v5
        with:
          context: ./web-manager
          file: ./web-manager/Dockerfile
          target: base
          push: false
          tags: web-manager:ci
          cache-from: type=gha,scope=web-manager
          cache-to: type=gha,mode=max,scope=web-manager

  # 2. AI Server 검증 (빌드 스킵)
  validate-ai-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check AI Server files
        run: |
          echo "✅ Checking AI Server files..."
          test -f ai-server/Dockerfile && echo "Dockerfile OK"
          test -f ai-server/tests/test_basic.py && echo "Tests OK"
          echo "AI Server validation completed (build skipped due to large image size)"

  # 3. Web Manager 테스트
  test-web-manager:
    runs-on: ubuntu-latest
    needs: build-web-manager
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build web-manager test stage
        uses: docker/build-push-action@v5
        with:
          context: ./web-manager
          file: ./web-manager/Dockerfile
          target: test
          load: true
          tags: web-manager:test
          cache-from: type=gha,scope=web-manager
      
      - name: Run web-manager tests
        run: |
          docker run --rm web-manager:test \
            uv run pytest tests/test_basic.py -v

  # 4. Docker Compose 검증
  compose-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create .env file
        run: |
          cat > .env << 'EOF'
          AI_SERVER_IMAGE_NAME=ai-server
          AI_SERVER_IMAGE_TAG=test
          AI_SERVER_BUILD_ARG_POINT=dev
          WEB_MANAGER_IMAGE_NAME=web-manager
          WEB_MANAGER_IMAGE_TAG=test
          REDIS_IMAGE_NAME=redis
          REDIS_IMAGE_TAG=latest
          PROMETHEUS_IMAGE_TAG=latest
          GRAFANA_IMAGE_TAG=latest
          NODE_EXPORTER_IMAGE_TAG=latest
          NVIDIA_EXPORTER_IMAGE_TAG=latest
          SHARED_SHM_SIZE=2gb
          DISPLAY=:0
          HOST_IP=localhost
          HOST_OS_VERSION=ubuntu
          HOST_TIMEZONE=Asia/Seoul
          PORT_NUM=1
          REDIS_PORT=6379
          PROMETHEUS_PORT=9090
          GRAFANA_PORT=3000
          NODE_EXPORTER_PORT=9440
          NVIDIA_EXPORTER_PORT=9835
          SUPABASE_KEY=test
          SUPABASE_SERVICE_KEY=test
          EOF
      
      - name: Validate docker-compose.yml
        run: docker compose config --quiet

  # 5. 결과 확인
  ci-result:
    runs-on: ubuntu-latest
    needs: [build-web-manager, validate-ai-server, test-web-manager, compose-check]
    if: always()
    steps:
      - name: Check CI Status
        run: |
          echo "=============================="
          echo "CI Results"
          echo "=============================="
          echo "Web Manager Build: ${{ needs.build-web-manager.result }}"
          echo "AI Server Validation: ${{ needs.validate-ai-server.result }}"
          echo "Web Manager Tests: ${{ needs.test-web-manager.result }}"
          echo "Compose Check: ${{ needs.compose-check.result }}"
          echo "=============================="
          
          if [[ "${{ needs.build-web-manager.result }}" != "success" ]] || \
             [[ "${{ needs.validate-ai-server.result }}" != "success" ]] || \
             [[ "${{ needs.test-web-manager.result }}" != "success" ]] || \
             [[ "${{ needs.compose-check.result }}" != "success" ]]; then
            echo "❌ CI Failed"
            exit 1
          fi
          
          echo "✅ CI Passed!"
          echo ""
          echo "Note: AI Server build was skipped (image too large for CI)"
          echo "Test locally with: ./test-local.sh ai-server"