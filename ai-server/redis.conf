# redis.conf - In-Memory Only Configuration for Container

# Unix Domain Socket (UDS)
unixsocket /redis.sock
unixsocketperm 770

# --- Network ---
# 클라이언트가 접속할 포트 번호
port 6379

# 다른 컨테이너에서 Redis에 접속할 수 있도록 모든 네트워크 인터페이스에서 수신 대기합니다.
# 중요: 이 설정을 사용하면 Redis가 노출될 수 있으므로,
# Docker 네트워크, 방화벽 등을 통해 접근 제어를 반드시 해야 합니다.
# 보안이 중요하다면 특정 IP나 Docker 네트워크 내부 IP로 제한하는 것을 고려하세요.
bind 0.0.0.0

# TCP keepalive 설정 (초 단위). 클라이언트 연결 상태 감지.
tcp-keepalive 300

# --- General ---
# Docker 컨테이너 환경에서는 'no'로 설정하여 포그라운드에서 실행합니다.
daemonize no

# 로그 레벨 (debug, verbose, notice, warning)
loglevel notice

# 로그 파일 경로. 비워두면 표준 출력(stdout)으로 로깅합니다. (컨테이너 환경에 적합)
logfile ""

# 데이터베이스 개수
databases 16

# --- Persistence (데이터 영속성) ---
# !!! 중요: 데이터 영속성 기능을 완전히 비활성화합니다. !!!
# Redis 종료 시 모든 데이터는 삭제됩니다.

# RDB 스냅샷 비활성화: 모든 'save' 지시어를 주석 처리하거나 삭제합니다.
# save 900 1
# save 300 10
# save 60 10000

# RDB 파일 이름 (사용 안 함)
# dbfilename dump.rdb

# AOF (Append Only File) 비활성화: 'no'로 설정합니다.
appendonly no

# AOF 파일 이름 (사용 안 함)
# appendfilename "appendonly.aof"

# 데이터 저장 경로 (영속성을 사용하지 않으므로 크게 중요하지 않지만, 기본값 유지)
dir ./

# --- Security ---
# 필요하다면 비밀번호를 설정하세요. 주석 해제 후 'yourpassword'를 변경합니다.
# requirepass yourpassword

# --- Memory Management ---
# Redis가 사용할 최대 메모리 설정 (예: 컨테이너에 할당된 메모리의 일부)
# 설정하지 않으면 시스템 메모리 한계까지 사용하려고 시도합니다.
maxmemory 32gb

# 메모리 제한 도달 시 키 제거 정책
# volatile-lru, allkeys-lru, volatile-ttl, noeviction 등
# 순수 캐시로 사용 시 'allkeys-lru' 또는 'volatile-lru'가 일반적입니다.
# TTL을 적극적으로 사용한다면 'volatile-ttl'도 좋습니다.
maxmemory-policy volatile-ttl

# --- Advanced options ---
# 필요에 따라 추가 설정 가능

